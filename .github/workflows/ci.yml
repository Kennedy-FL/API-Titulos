name: CI da API

on: 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
    teste:
        runs-on: ubuntu-latest
        steps:
            - name: Clonar o repositório
              uses: actions/checkout@v3

            - name: Configurar o Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.10.12'

            - name: Instalar as dependências
              run: |
               pip install -r requirements.txt
               pip install pytest

            - name: Executar o teste
              run: pytest

            - name: Criar artefato com resultados dos testes
              run: |
                mkdir -p artifact
                pytest > artifact/test_results.log
      
            - name: Fazer upload do artefato
              uses: actions/upload-artifact@v3
              with:
                name: test-results-artifact
                path: artifact/test_results.log
    deploy:
      runs-on: ubuntu-latest 
      needs: teste
      environment: 
        name: dev
        url: http://api-titulos.com

      steps:
        - name: Clonar o repositório
          uses: actions/checkout@v3
        
        - name: Configurar acesso SSH
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
          
        - name: Deploy para a EC2
          run: |
            ssh -o StrictHostKeyChecking=no ubuntu@18.223.64.246 << 'EOF' 
            cd ~/API-Titulos
            git pull origin main
            source venv/bin/activate
            pip install -r requirements.txt
            sudo systemctl restart flask
            EOF
